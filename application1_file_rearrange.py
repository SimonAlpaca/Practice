# -*- coding: utf-8 -*-

import os
import shutil
import codecs

# In[IO]

# input folder
file_dir = r"C:\ProgramData\Anaconda3\Practice"
#file_dir = r"M:\comic\Rin (Mochi)\Doujin"
# output folder
to_dir = r"C:\ProgramData\Anaconda3\Practice"
#to_dir = r"M:\comic\Rin (Mochi)\Doujin"

# prefix of the first folder
begin_number = 1

# In[debug]
# check whether full path length is too long
file_prewalk = os.walk(file_dir)
i = begin_number - 2
for root, dir, files in file_prewalk:                      # must call root, dir, files
    if len(files) != 0:                                 # check if the folder is empty
        i = i + 1 
    for file in files:                                  # files as a list
         from_path = os.path.join(root, file)           # join to combine the root name and file name
         file_rename = str(i).rjust(3,"0") + "_" + file # rjust to add 0 in front of single number
         to_path = to_dir + "\\" + file_rename
         if len(from_path) > 255:
             raise FileNotFoundError("Full path name can't exceed 255 characters")
         if len(to_path) > 255:
             raise FileNotFoundError("Full path name can't exceed 255 characters")
             
# In[remove empty folder]
    for path,_,_ in file_prewalk:                      # must call path,_,_ to get all folders
        if len(os.listdir(path)) == 0:
            os.rmdir(path)                             # remove directory

# In[Removed]
'''
# In[create readme file to record folder name]
j = begin_number - 1
readme_dir = os.path.join(to_dir, "readme.txt")                # readme directory
with open(readme_dir, "a", encoding ="utf-8") as create_readme:   # create readme encoding utf-8
    create_readme.flush()                                              # refresh cache. otherwise can't write after open 
    create_readme.write("*** Generated by File Rearranger ***" + "\n")
    dir_list = os.listdir(file_dir)                                  # create a list of directory
    for r in dir_list:
        full_path = os.path.join(file_dir,r)
        if os.path.isdir(full_path):                                 # check if it is a folder
            j = j + 1    
            print(str(j).rjust(3, "0") + " : " + r)
            create_readme.write(str(j).rjust(3, "0") + " : " + r + "\n")                              # write folder name in readme 
'''

# In[Create Readme and Rearrange files]

readme_dir = os.path.join(to_dir, "readme.txt")         # readme directory
create_readme = codecs.open(readme_dir, "a")            # create readme supporting utf-8
create_readme.flush()                                   # refresh cache. otherwise can't write after open 
create_readme.write("*** Generated by File Rearranger ***" + "\n")

file_walk = os.walk(file_dir)
i = begin_number - 2
for root, dir, files in file_walk:                      # must call root, dir, files
    if len(files) != 0:                                 # check if the folder is empty
        i = i + 1 
        if root == to_dir:                                      # skip the parent directory
            continue
        dir_name = root.split(os.path.sep)[-1]
        print(str(i).rjust(3, "0") + " : " + dir_name)
        create_readme.write(str(i).rjust(3, "0") + " : " + dir_name + "\n")    # write readme
    for file in files:                                  # files as a list
         if root == to_dir:                             # skip the destination folder
             continue
         
         from_path = os.path.join(root, file)           # join to combine the root name and file name
         file_rename = str(i).rjust(3,"0") + "_" + file # rjust to add 0 in front of single number
         to_path = to_dir + "\\" + file_rename
         shutil.copy(from_path, to_path)                # copy and rename file

create_readme.close()
print("Finish")