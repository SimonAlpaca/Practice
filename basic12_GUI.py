# -*- coding: utf-8 -*-

import tkinter as tk
import os
import shutil
import codecs

# In[IO]

def file_rearranger():                                        # modify to definition
    
    file_dir = str(from_entry.get())                          # get entry values from GUI
    to_dir = str(to_entry.get())
    begin_number = int(num_entry.get())
    
# In[debug]
# check whether full path length is too long
    file_prewalk = os.walk(file_dir)
    i = begin_number - 2
    for root, dir, files in file_prewalk:                      
        if len(files) != 0:                                 
            i = i + 1 
        for file in files:                                  
            from_path = os.path.join(root, file)           
            file_rename = str(i).rjust(3,"0") + "_" + file 
            to_path = to_dir + "\\" + file_rename
            if len(from_path) > 255:
                raise FileNotFoundError("Full path name can't exceed 255 characters")
            if len(to_path) > 255:
                raise FileNotFoundError("Full path name can't exceed 255 characters")
             
# In[remove empty folder]
        for path,_,_ in file_prewalk:                      
            if len(os.listdir(path)) == 0:
                os.rmdir(path)                             

# In[Create Readme and Rearrange files]

    readme_dir = os.path.join(to_dir, "readme.txt")         
    create_readme = codecs.open(readme_dir, "a")            
    create_readme.flush()                                   
    create_readme.write("*** Generated by File Rearranger ***" + "\n")
    result_text.insert(tk.END,"*** Loading ***" + "\n")    # insert to GUI textbox
    file_walk = os.walk(file_dir)
    i = begin_number - 2
    for root, dir, files in file_walk:                      
        if len(files) != 0:                                 
            i = i + 1 
            if root == to_dir:                                      
                continue
            dir_name = root.split(os.path.sep)[-1]          
            print1 = str(i).rjust(3, "0") + " : " + dir_name
            print(print1)
            result_text.insert(tk.END,print1+"\n")         # insert to GUI textbox
            create_readme.write(print1 + "\n")    
        for file in files:                                  
             if root == to_dir:                             
                 continue
         
             from_path = os.path.join(root, file)           
             file_rename = str(i).rjust(3,"0") + "_" + file 
             to_path = to_dir + "\\" + file_rename
             shutil.copy(from_path, to_path)                

    create_readme.close()                                 
    print("Finish")
    result_text.insert(tk.END, "Finish" )                      # insert to GUI textbox
    result_text.delete("1.0","1.20")                        # delete the first row of textbox
    
# In[GUI]

# Window
window = tk.Tk()                                             # create GUI
window.resizable(width=False,height=False)                   # disallow window resize
window.title("File Rearranger")                              # title
window.geometry('500x550')                                   # window size
window.configure(background="white")                         # background colour

# Textbox
result_text = tk.Text(window,background="white", width=65, height=30) # add textbox
result_text.pack()

# Rearrange Folder
from_frame = tk.Frame(window,background="white")             # add frame first
from_frame.pack(pady=10, fill="both")
from_label = tk.Label(from_frame, text = "Rearrange Folder : ",background="white")  # add label
from_label.pack(side=tk.LEFT)
from_entry = tk.Entry(from_frame, width=54)                  # add entry box
from_entry.insert(1, "C:\ProgramData\Anaconda3\Practice")    # default value
from_entry.pack(side=tk.RIGHT)

# Destination Folder
to_frame = tk.Frame(window,background="white")               
to_frame.pack(pady=5, fill="both")                           # pady means the gap, fill both means aligh to left and right
to_label = tk.Label(to_frame, text = "Destination Folder : " ,background="white")
to_label.pack(side=tk.LEFT)
to_entry = tk.Entry(to_frame, width=54)
to_entry.insert(1, "C:\ProgramData\Anaconda3\Practice")
to_entry.pack()

# Prefix
num_frame = tk.Frame(window,background="white")
num_frame.pack(pady=10)
num_label = tk.Label(num_frame, text = "First Prefix : ",background="white")
num_label.pack(side=tk.LEFT)
num_entry = tk.Entry(num_frame, width=5)
num_entry.insert(1, "1")
num_entry.pack()

# Button
go_button = tk.Button(window, text = "GO", command=file_rearranger,width=10)
go_button.pack()


window.mainloop()        # must add at the end to make it run